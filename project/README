Experiment 1

Topology: 

N1            N4
  \          /
   \	    /
    N2————N3

Bandwidth: N1-N4: 10Mbps
           N2-N3: 10Mbps



Measurements: TCP’s throughput, drop rate and RTT

TCP flavors: Tahoe, Reno, NewReno and Vegas

Experiment:

	Step 1:
		Initiate CBR between N2-N3 at flow rate of 1Mbps
	Step 2:
		Initiate TCP between N1-N4
	Step3:
		while ( 10Mbps bottleneck capacity of N2, N3 is not reached):
				increase CBR flow rate by 1Mbps
				do TCP measurements

Plots:
  For each TCP flavor:
	1. Throughput (y coordinate) vs. CBR flow rate (x coordinate)
	2. Drop rate (y coordinate) vs. CBR flow rate (x coordinate)
	3. RTT (y coordinate) vs.  CBR flow rate (x coordinate)

Statistics Analysis:
    Perform T-test on throughput data from Tahoe and Reno, if the null hypotheses (that the throughput performances of
    two TCP flavors are the same), collect more data.
    Perform similar T-test on drop rate data from Tahoe and Reno and T-test on latency data from Tahoe and Reno.
    Perform T-test on data sets from other TCP flavor pairs.




Experiment 2

Topology: 
N1            N4
  \          /
   \	    /
    N2————N3
   /        \
  /          \
N5            N6

Bandwith:
    N1-N4: 10Mpbs
	N5-N6: 10Mpbs
	N2-N3: 10Mbps


Measurements: N1->N4 and N5->N6 TCP throughput, drop rate and RTT

Experiment:

	X/Y pair = Reno/Reno, NewReno/Reno, Vegas/Vegas, NewReno/Vegas

	To analyze fairness between different TCP variants, two variants are compared in the same environment for the distribution of bandwidth with a common CBR. 
	N2->N3: CBR over UDP
	N1->N4: TCP flow of variant X 
	N5->N6: TCP flow of variant Y 

	1.	For each X, Y pair:
		i.  Initiate a CBR flow from N2 -> N3 with flow rate of 1 Mbps
		ii.	Initiate TCP X between N1-N4, TCP Y between N5 - N6 at the same time
			a. While ( 10 Mbps bottleneck capacity of N2, N3 is not reached):
				(1). Measure throughput, drop-rate, latency.
				(2). Increase CBR flow rate by 1 Mbps

Plots:
	For each X, Y TCP variants pair in Reno/Reno, NewReno/Reno, Vegas/Vegas, NewReno/Vegas
		Two value sets: Blue color for X, Orange for Y.
			1. Throughput (y coordinate) vs. CBR flow rate (x coordinate)
			2. Drop rate (y coordinate) vs. CBR flow rate (x coordinate)
			3. RTT (y coordinate) vs.  CBR flow rate (x coordinate)


Statistics Analysis:
    For each pair of X and Y TCP variants:
        Perform T-test on throughput, drop rate and latency data to verify the data are statistically significant

Experiment 3:


N1            N4
  \          /
   \	    /
    N2————N3
   /        \
  /          \
N5            N6
#general

Bandwidth: 10 Mbps for each link

Measurements: TCP's throughput, drop rate and latency between N1-N4
              CBR's throughput, drop rate and latency between N5-N6

TCP flavors: Reno, Sack

Experiment:
     1. Start TCP connection between N1-N4
     2. Start CBR between N5 and N6 after 2 second.
     3. Keep all the connection running for 8 more seconds, make measurement every 0.5 second in the meantime
     4. Change to the other queueing mechanism, restart the experiment

Plots:
  For each TCP flavor:
    1. TCP's throughput and CBR's throughput (y coordinate) vs. time (x coordinate)
	2. TCP's drop rate and CBR's drop rate (y coordinate) vs. time (x coordinate)
	3. TCP's RTT and CBR's latency (y coordinate) vs. time (x coordinate)

Statistics Analysis:
    For each queueing mechanism:
        Applying T-test on throughput, drop rate and latency data for TCP and CBR to verify the data are statistically significant


Job Seperating:
For expirement part:
Zhongxi was respobsible for Java code to read trace data from TCL files and calculate Throughput, RTT and Drop Rate. 
Shiyu wrote the code for TCL files, collected and analyzed data.
For the report:
Zhongxi finished the intoduction and experiment 1 and more than half of conclusion. And Shiyu wrote experiment 2, experiment 3 and rest part of conclusion. 
Zhongxi contributes much on the revision of the report.